Temp_class = Temp_class,
mass = mass,
length = length,
Period_start = lag(time_start),
Period_end = time_start,
SMR_prev = lag(SMR),
SMR = SMR,
SMR_mass_prev = lag(SMR_mass),
SMR_mass = SMR_mass,
RMR_prev = lag(RMR),
RMR = RMR,
RMR_mass_prev = lag(RMR_mass),
RMR_mass = RMR_mass,
MMR_mass = MMR_mass,
MMR_mass_prev = lag(MMR_mass)) %>%
filter(!is.na(SGR))
# Calculate overall SGR for each fish
overall_sgr_calculations <- data %>%
group_by(ID_fish) %>%
summarize(Overall_SGR = (log(last(mass)) - log(first(mass))) / as.numeric(difftime(last(time_start), first(time_start), units = "days")) * 100)
# Combine SGR calculations into one table
tb_SGRcalcs <- sgr_calculations %>%
# select(ID_fish, Temp_class, Month, Period_start, Period_end, mass, mass_prev, length, length_prev, SGR, SMR_prev, SMR, SMR_mass_prev, SMR_mass, RMR_prev, RMR, RMR_mass_prev, RMR_mass) %>%
left_join(overall_sgr_calculations, by = "ID_fish")
mod_SGR <- lmer(SGR ~ log(mass_prev) + (1|ID_fish), data = tb_SGRcalcs)
summary(mod_SGR)
tb_SGRcalcs$SGR_predict <- predict(mod_SGR, type = "response", allow.new.levels = TRUE)
tb_SGRcalcs$SGR_resid <- resid(mod_SGR)
write.csv(tb_SGRcalcs, file = "SGRcalcs.csv", col.names = TRUE, row.names = FALSE)
##################################################################################
tb_master <- tb_kitchensink %>%
left_join(tb_SGRcalcs[,c(1, 2, 24:36)], by = c("Resp_Day", "ID_fish"))
write.csv(tb_master, file = "mastertable.csv", col.names = TRUE, row.names = FALSE)
#Run until here before Step 5
setwd("C:/Users/s222141733/OneDrive - Deakin University/Beth Hoots/2023 Growth Performance/Analysis/Raw Data/Respirometry Data/Real MMR from last round")
file.listrealMMR <- list.files()
realMMR_all <- lapply(file.listrealMMR, read_excel)
tb_realMMRall <- bind_rows(realMMR_all) %>%
rename(
chamber_ch = Chamber.No,
ID_fish    = Ind,
mass       = Mass,
volume_ch  = Ch.Volume,
DOunit     = DO.unit,
dateTime   = Date.Time,
Temp_class = Temp.class,
slope_wBR  = Slope.with.BR,
BRSlope    = BR.Slope
)  %>%
mutate(
dateTime       = as.POSIXct(ymd_hms(dateTime)),
Time           = as_hms(ymd_hms(dateTime)),
Date           = as.Date(dateTime, format = "%Y/%m/%d"),
) %>%
drop_na() %>%
mutate(
volume_net = volume_ch - mass,
MMR_wBR    = abs(slope_wBR)*(volume_net/1000)*60*60, #uncomment for mgO2/hr instead
BR         = abs(BRSlope)*(volume_ch/1000)*60*60,
MMR        = MMR_wBR - BR,
BR_perc    = (BR/MMR_wBR)*100
)
MMR_validation <- left_join(tb_MRcalcs[which(tb_MRcalcs$Month == "September"),], tb_realMMRall, by = "ID_fish") %>%   #table which combines both MMR measurements for September
mutate(
MaxMR_diff = MMR.y - MMR.x,
MaxMR_ratio = MMR.y/MMR.x
)
MMR_comparison <- ggplot(data = MMR_validation, aes(MMR.y, MMR.x, colour = as.factor(Temp_class.x))) +
geom_point() +
geom_smooth(method = "lm", se = F) +
labs(x=expression(Maximum~Metabolic~Rate~(mg~O[2]~h^-1)), y=expression(Active~Metabolic~Rate~(mg~O[2]~h^-1))) +
theme_classic()+
scale_color_manual(values = c("#78B7C5", "#F21A00")) +
labs(colour=expression("Temperature ("*degree*C*")"))
setwd("C:/Users/s222141733/OneDrive - Deakin University/Beth Hoots/2023 Growth Performance/Analysis/Figures")
ggsave(MMR_comparison, filename = "MMR_comparison.png", bg = "transparent", width = 8.5, height = 11, units = "in")
write.csv(MMR_validation, file = "MMR_validation.csv")
ggplot(data = MMR_validation) +
geom_point(aes(x = mass.x, y = MMR.y, color = factor(Temp_class.x)), shape = 4) +
geom_point(aes(x = mass.x, y = MMR.x, color = factor(Temp_class.x))) +
# geom_segment(aes(x = mass.x, xend = mass.x, y = MMR.y, yend = MMR.x, color = factor(Temp_class.x), group = ID_fish)) +
theme_classic() +
scale_color_manual(values = c("#78B7C5", "#F21A00")) +
labs(colour = expression("Temperature ("*degree*C*")"), y = expression(Metabolic~Rate~(mg~O[2]~h^-1)), x = "mass (g)")
ggplot(data = MMR_validation) +
geom_point(aes(y = MaxMR_diff, x = mass.x, color = factor(Temp_class.x))) +
geom_hline(yintercept = 0) +
theme_classic() +
scale_color_manual(values = c("#78B7C5", "#F21A00")) +
labs(colour = expression("Temperature ("*degree*C*")"), y = expression(MMR~-~AMR~(mg~O[2]~h^-1)), x = "mass (g)")
ggplot(data = MMR_validation) +
geom_point(aes(y = MaxMR_ratio, x = mass.x, color = factor(Temp_class.x))) +
geom_hline(yintercept = 1) +
theme_classic() +
scale_color_manual(values = c("#78B7C5", "#F21A00")) +
labs(colour = expression("Temperature ("*degree*C*")"), y = "Ratio MMR:AMR", x = "mass (g)")
MMR_galaxiids <- read.csv("C:/Users/s222141733/OneDrive - Deakin University/Beth Hoots/2023 Growth Performance/Analysis/Figures/MMR_validation.csv")
ggplot(data = MMR_galaxiids, aes(x = Mass, y = MMR, color = factor(Temperature), shape = factor(Source), group = factor(Source))) +
#geom_smooth(aes(linetype = factor(Source)), method = "lm", se = F, color = "lightgray") +
geom_point() +
scale_shape_manual(values = c(19, 18, 4, 1)) +
scale_color_manual(values = c("#3B9AB2","#78B7C5","#E1AF00", "#F21A00"))+
theme_classic() +
labs(colour = expression("Temperature ("*degree*C*")"), shape = "Data source", linetype = "Data source", y = expression(Maximum~Metabolic~Rate~(mg~O[2]~h^-1)), x = "Mass (g)")
ggplot(data = MMR_galaxiids, aes(x = mass, y = MMR, color = factor(Temperature), shape = factor(Source), group = factor(Source))) +
#geom_smooth(aes(linetype = factor(Source)), method = "lm", se = F, color = "lightgray") +
geom_point() +
scale_shape_manual(values = c(19, 18, 4, 1)) +
scale_color_manual(values = c("#3B9AB2","#78B7C5","#E1AF00", "#F21A00"))+
theme_classic() +
labs(colour = expression("Temperature ("*degree*C*")"), shape = "Data source", linetype = "Data source", y = expression(Maximum~Metabolic~Rate~(mg~O[2]~h^-1)), x = "Mass (g)")
View(MMR_galaxiids)
ggplot(data = MMR_galaxiids, aes(x = mass.x, y = MMR, color = factor(Temperature), shape = factor(Source), group = factor(Source))) +
#geom_smooth(aes(linetype = factor(Source)), method = "lm", se = F, color = "lightgray") +
geom_point() +
scale_shape_manual(values = c(19, 18, 4, 1)) +
scale_color_manual(values = c("#3B9AB2","#78B7C5","#E1AF00", "#F21A00"))+
theme_classic() +
labs(colour = expression("Temperature ("*degree*C*")"), shape = "Data source", linetype = "Data source", y = expression(Maximum~Metabolic~Rate~(mg~O[2]~h^-1)), x = "Mass (g)")
ggplot(data = MMR_galaxiids, aes(x = mass.x, y = MMR.x, color = factor(Temperature), shape = factor(Source), group = factor(Source))) +
#geom_smooth(aes(linetype = factor(Source)), method = "lm", se = F, color = "lightgray") +
geom_point() +
scale_shape_manual(values = c(19, 18, 4, 1)) +
scale_color_manual(values = c("#3B9AB2","#78B7C5","#E1AF00", "#F21A00"))+
theme_classic() +
labs(colour = expression("Temperature ("*degree*C*")"), shape = "Data source", linetype = "Data source", y = expression(Maximum~Metabolic~Rate~(mg~O[2]~h^-1)), x = "Mass (g)")
ggsave(MMR_comparison, filename = "MMR_comparison.png", bg = "transparent", width = 8.5, height = 11, units = "in")
MMR_comparison
mmr_comparison_23 <- lm(MMR ~ AMR, data = MMR_validation[which(MMR_validation$Temp_class.x == "23"),])
rm(list=ls())
#load in required packages
library(tidyverse)
library(modelr)
library(lubridate)
library(hms)
library(ggplot2)
library(RColorBrewer)
library(readxl)
library(dplyr)
library(cowplot)
library(ggsignif)
library(wesanderson)
#don't forget to set the appropriate working directory
setwd("C:/Users/s222141733/OneDrive - Deakin University/Beth Hoots/2023 Growth Performance/Analysis/Raw Data/Respirometry Data/MRcalcs")
#read all "_MRcalcs.csv" files, bind into one table, and add columns with logged values
file.list <- list.files()
calcs_all <- lapply(file.list, read_csv)
tb_MRcalcs <- bind_rows(calcs_all, .id="Resp_Day") %>%
mutate(
log_SMR_low10pc = log10(SMR),
log_mass = log10(mass),
log_RMR = log10(RMR),
log_MMR = log10(MMR),
Resp_Day = as.numeric(Resp_Day)
)
tb_MRcalcs$Month <- cut(
tb_MRcalcs$Resp_Day,
breaks = c(0, 13, seq(23, max(tb_MRcalcs$Resp_Day) + 10, by = 10)),
right = FALSE,
labels = c("April", "May", "June", "July", "August", "September")
)
#creating a linear regression between SMR and mass for both temperature treatments (note, 18 will contain values from initial trial, which is generally <18C)
lm_smr_18 = lm(log_SMR_low10pc ~ log_mass, tb_MRcalcs[which(tb_MRcalcs$Temp_class == 18 & tb_MRcalcs$Resp_Day > 12),])
lm_smr_23 = lm(log_SMR_low10pc ~ log_mass, tb_MRcalcs[which(tb_MRcalcs$Temp_class == 23),])
summary(lm_smr_18)
summary(lm_smr_23)
#log_mass_18 = data.frame(log_mass = (mean(tb_MRcalcs[which(tb_MRcalcs$Temp_class == 18 & tb_MRcalcs$Resp_Day > 12),]$log_mass))) #pulling the mean mass value of fish in 18C treatment, naming it "log_mass_18"
#log_mass_23 = data.frame(log_mass = (mean(tb_MRcalcs[which(tb_MRcalcs$Temp_class == 23),]$log_mass))) #pulling the mean mass value of fish in 23C treatment, naming it "log_mass_23"
log_mass_grandmean = data.frame(log_mass = (mean(tb_MRcalcs[which(tb_MRcalcs$Resp_Day > 12),]$log_mass))) #pulling the mean mass value of fish in 18C treatment, naming it "log_mass_18"
#predicting the SMR value for mass using our regression
SMR_mean_predicted_18 = predict(lm_smr_18, newdata = log_mass_grandmean)
SMR_mean_predicted_23 = predict(lm_smr_23, newdata = log_mass_grandmean)
#adding the residuals calculated from our regressions to our table
tb_MRcalcs <- tb_MRcalcs %>%
mutate(resid = ifelse(Temp_class == 18, residuals(lm_smr_18), residuals(lm_smr_23)))
#Adding new columns with mass standardized SMR calculations
tb_MRcalcs <-
tb_MRcalcs %>%
mutate(
log_SMR_mass = ifelse(Temp_class == 18, SMR_mean_predicted_18 + resid, SMR_mean_predicted_23 + resid), #use the 2 models to calc residuals + predicted values for each FishID/time
SMR_mass = as.numeric(10^log_SMR_mass),
SMR_resid = resid,
log_SMR_mlnd = NULL,
log_SMR_low10pc = NULL,
log_SMR_mass = NULL
)
#creating a linear regression between RMR and mass for both temperature treatments
lm_rmr_18 = lm(log_RMR ~log_mass, tb_MRcalcs[which(tb_MRcalcs$Temp_class == 18 & tb_MRcalcs$Resp_Day > 12),])
lm_rmr_23 = lm(log_RMR ~log_mass, tb_MRcalcs[which(tb_MRcalcs$Temp_class == 23),])
summary(lm_rmr_18)
summary(lm_rmr_23)
#predicting the RMR value for mass using our regression
RMR_mean_predicted_18 = predict(lm_rmr_18, newdata = log_mass_grandmean)
RMR_mean_predicted_23 = predict(lm_rmr_23, newdata = log_mass_grandmean)
#adding the residuals calculated from our regressions to our table
tb_MRcalcs <- tb_MRcalcs %>%
mutate(resid = ifelse(Temp_class == 18, residuals(lm_rmr_18), residuals(lm_rmr_23)))
#Adding new columns with mass standardized RMR calculations
tb_MRcalcs <- tb_MRcalcs %>%
mutate(
log_RMR_mass = ifelse(Temp_class == 18, RMR_mean_predicted_18 + resid, RMR_mean_predicted_23 + resid), #use the 2 models to calc residuals + predicted values for each FishID/time
RMR_mass = as.numeric(10^log_RMR_mass),
RMR_resid = resid,
log_RMR = NULL,
log_RMR_mass = NULL
)
#creating a linear regression between MMR and mass for both temperature treatments
lm_mmr_18 = lm(log_MMR ~ log_mass, tb_MRcalcs[which(tb_MRcalcs$Temp_class == 18 & tb_MRcalcs$Resp_Day > 12),])
lm_mmr_23 = lm(log_MMR ~ log_mass, tb_MRcalcs[which(tb_MRcalcs$Temp_class == 23),])
#predicting the MMR value for "mass" using our regression
MMR_mean_predicted_18 = predict(lm_mmr_18, newdata = log_mass_grandmean)
MMR_mean_predicted_23 = predict(lm_mmr_23, newdata = log_mass_grandmean)
#adding the residuals calculated from our regressions to our table
tb_MRcalcs <- tb_MRcalcs %>%
mutate(resid = ifelse(Temp_class == 18, residuals(lm_mmr_18), residuals(lm_mmr_23)))
#Adding new columns with mass standardized MMR calculations
tb_MRcalcs <-
tb_MRcalcs %>%
mutate(
log_MMR_mass = ifelse(Temp_class == 18, MMR_mean_predicted_18 + resid, MMR_mean_predicted_23 + resid), #use the 2 models to calc residuals + predicted values for each FishID/time,
MMR_mass = as.numeric(10^log_MMR_mass),
MMR_resid = resid,
log_MMR_mass = NULL,
log_MMR = NULL,
) %>%
drop_na() %>%
arrange(Resp_Day, ID_fish)
# Create the grouped variable
tb_MRcalcs$Month <- cut(
tb_MRcalcs$Resp_Day,
breaks = c(0, 13, seq(23, max(tb_MRcalcs$Resp_Day) + 10, by = 10)),
right = FALSE,
labels = c("April", "May", "June", "July", "August", "September")
)
setwd("C:/Users/s222141733/OneDrive - Deakin University/Beth Hoots/2023 Growth Performance/Analysis/Figures")
write.csv(tb_MRcalcs, file = "MRcalcs.csv", col.names = TRUE, row.names = FALSE) #Change the name
############################# MR Diagnostic Plots #################################
setwd("C:/Users/s222141733/OneDrive - Deakin University/Beth Hoots/2023 Growth Performance/Analysis/Raw Data/Respirometry Data/MR_Slopes")
file.listSMR <- list.files()
SMR_all <- lapply(file.listSMR, read_csv)
tb_SMRall <- bind_rows(SMR_all, .id="Resp_Day") %>%
arrange(Resp_Day, Ind, Date.Time)
setwd("C:/Users/s222141733/OneDrive - Deakin University/Beth Hoots/2023 Growth Performance/Analysis/Raw Data/Respirometry Data/MMR")
file.listMMR <- list.files()
MMR_all <- lapply(file.listMMR, read_excel)
tb_MMRall <- bind_rows(MMR_all, .id="Resp_Day") %>%
drop_na()%>%
left_join(tb_SMRall %>% select(Ind, Resp_Day, Length), by = c("Ind", "Resp_Day")) %>%
distinct() %>%
arrange(Resp_Day, Ind, Date.Time)
tb_MRall <- bind_rows(tb_SMRall, tb_MMRall)
tb_MRall <- tb_MRall %>%
rename(
chamber_ch = Chamber.No,
ID_fish    = Ind,
mass       = Mass,
volume_ch  = Ch.Volume,
DOunit     = DO.unit,
dateTime   = Date.Time,
Temp_class = Temp.class,
slope_wBR  = Slope.with.BR,
BRSlope    = BR.Slope
)  %>%
mutate(
dateTime       = as.POSIXct(ymd_hms(dateTime)),
Time           = as_hms(ymd_hms(dateTime)),
Date           = as.Date(dateTime, format = "%Y/%m/%d"),
Resp_Day       = as.numeric(Resp_Day)
) %>%
mutate(
volume_net = volume_ch - mass,
MR_wBR     = abs(slope_wBR)*(volume_net/1000)*60*60,
BR         = BRSlope*(volume_ch/1000)*60*60,
MR         = MR_wBR + BR,
BR_perc    = (BR/MR_wBR)*100
) %>%
drop_na() %>%
arrange(Resp_Day, ID_fish, dateTime)
tb_MRall <- left_join(tb_MRall, tb_MRcalcs %>% select(Resp_Day, ID_fish, time_start, time_end, length, SMR, RMR, MMR, SMR_mass, RMR_mass, MMR_mass, SMR_resid, RMR_resid, MMR_resid), by = c("ID_fish", "Resp_Day")) #a table merging individual MO2 slopes with calculated MR values
setwd("C:/Users/s222141733/OneDrive - Deakin University/Beth Hoots/2023 Growth Performance/Analysis/Raw Data")
tb_final_samp <- read.csv("FinalBiometrics.csv")
tb_kitchensink <- left_join(tb_MRcalcs, tb_final_samp, by = c("ID_fish")) #a table with all resp data and metadata collected in dissection
tb_kitchensink$Month <- cut(
tb_kitchensink$Resp_Day,
breaks = c(0, 13, seq(23, max(tb_kitchensink$Resp_Day) + 10, by = 10)),
right = FALSE,
labels = c("April", "May", "June", "July", "August", "September")
)
setwd("C:/Users/s222141733/OneDrive - Deakin University/Beth Hoots/2023 Growth Performance/Analysis/Figures")
write.csv(tb_kitchensink[which(tb_kitchensink$Month != "April"),], file = "KitchenSink.csv", col.names = TRUE, row.names = FALSE) #Change the name
write.csv(tb_kitchensink[which(tb_kitchensink$Month != "April" & !is.na(tb_kitchensink$Final_Mass_g) & tb_kitchensink$ID_fish != 122),], file = "KitchenSink_Survivors.csv", col.names = TRUE, row.names = FALSE)
##################################################################################
library(lubridate)
library(hms)
library(dplyr)
library(lme4)
#don't forget to set the appropriate working directory
setwd("C:/Users/s222141733/OneDrive - Deakin University/Beth Hoots/2023 Growth Performance/Analysis/Figures")
data <- read.csv("MRcalcs.csv") %>%
mutate(
time_start = as.Date(time_start)
)
data <- data %>%
arrange(ID_fish, time_start)
# Calculate mass_prev
data <- data %>%
group_by(ID_fish) %>%
mutate(mass_prev = lag(mass)) %>%
mutate(length_prev = lag(length)) %>%
ungroup()
# Calculate SGR between each measurement
sgr_calculations <- data %>%
group_by(ID_fish) %>%
mutate(SGR = (log(mass) - lag(log(mass))) / as.numeric(difftime(time_start, lag(time_start), units = "days")) * 100,
Month = Month,
Temp_class = Temp_class,
mass = mass,
length = length,
Period_start = lag(time_start),
Period_end = time_start,
SMR_prev = lag(SMR),
SMR = SMR,
SMR_mass_prev = lag(SMR_mass),
SMR_mass = SMR_mass,
RMR_prev = lag(RMR),
RMR = RMR,
RMR_mass_prev = lag(RMR_mass),
RMR_mass = RMR_mass,
MMR_mass = MMR_mass,
MMR_mass_prev = lag(MMR_mass)) %>%
filter(!is.na(SGR))
# Calculate overall SGR for each fish
overall_sgr_calculations <- data %>%
group_by(ID_fish) %>%
summarize(Overall_SGR = (log(last(mass)) - log(first(mass))) / as.numeric(difftime(last(time_start), first(time_start), units = "days")) * 100)
# Combine SGR calculations into one table
tb_SGRcalcs <- sgr_calculations %>%
# select(ID_fish, Temp_class, Month, Period_start, Period_end, mass, mass_prev, length, length_prev, SGR, SMR_prev, SMR, SMR_mass_prev, SMR_mass, RMR_prev, RMR, RMR_mass_prev, RMR_mass) %>%
left_join(overall_sgr_calculations, by = "ID_fish")
mod_SGR <- lmer(SGR ~ log(mass_prev) + (1|ID_fish), data = tb_SGRcalcs)
summary(mod_SGR)
tb_SGRcalcs$SGR_predict <- predict(mod_SGR, type = "response", allow.new.levels = TRUE)
tb_SGRcalcs$SGR_resid <- resid(mod_SGR)
write.csv(tb_SGRcalcs, file = "SGRcalcs.csv", col.names = TRUE, row.names = FALSE)
##################################################################################
tb_master <- tb_kitchensink %>%
left_join(tb_SGRcalcs[,c(1, 2, 24:36)], by = c("Resp_Day", "ID_fish"))
write.csv(tb_master, file = "mastertable.csv", col.names = TRUE, row.names = FALSE)
#Run until here before Step 5
setwd("C:/Users/s222141733/OneDrive - Deakin University/Beth Hoots/2023 Growth Performance/Analysis/Raw Data/Respirometry Data/Real MMR from last round")
file.listrealMMR <- list.files()
realMMR_all <- lapply(file.listrealMMR, read_excel)
tb_realMMRall <- bind_rows(realMMR_all) %>%
rename(
chamber_ch = Chamber.No,
ID_fish    = Ind,
mass       = Mass,
volume_ch  = Ch.Volume,
DOunit     = DO.unit,
dateTime   = Date.Time,
Temp_class = Temp.class,
slope_wBR  = Slope.with.BR,
BRSlope    = BR.Slope
)  %>%
mutate(
dateTime       = as.POSIXct(ymd_hms(dateTime)),
Time           = as_hms(ymd_hms(dateTime)),
Date           = as.Date(dateTime, format = "%Y/%m/%d"),
) %>%
drop_na() %>%
mutate(
volume_net = volume_ch - mass,
MMR_wBR    = abs(slope_wBR)*(volume_net/1000)*60*60, #uncomment for mgO2/hr instead
BR         = abs(BRSlope)*(volume_ch/1000)*60*60,
MMR        = MMR_wBR - BR,
BR_perc    = (BR/MMR_wBR)*100
)
View(tb_realMMRall)
MMR_validation <- left_join(tb_MRcalcs[which(tb_MRcalcs$Month == "September"),], tb_realMMRall %>% select(ID_fish, MMR), by = "ID_fish") %>%   #table which combines both MMR measurements for September
mutate(
MaxMR_diff = MMR.y - MMR.x,
MaxMR_ratio = MMR.y/MMR.x
)
View(MMR_validation)
MMR_validation <- left_join(tb_MRcalcs[which(tb_MRcalcs$Month == "September"),], tb_realMMRall %>% select(ID_fish, MMR), by = "ID_fish") %>%   #table which combines both MMR measurements for September
mutate(
MaxMR_diff = MMR.y - MMR.x,
MaxMR_ratio = MMR.y/MMR.x
) %>%
rename(
AMR = MMR.x,
MMR = MMR.y,
AMR_mass = MMR_mass
)
MMR_validation <- left_join(tb_MRcalcs[which(tb_MRcalcs$Month == "September"),], tb_realMMRall %>% select(ID_fish, MMR), by = "ID_fish") %>%   #table which combines both MMR measurements for September
mutate(
MaxMR_diff = MMR.y - MMR.x,
MaxMR_ratio = MMR.y/MMR.x
) %>%
rename(
AMR = MMR.x,
MMR = MMR.y,
AMR_mass = MMR_mass,
AMR_resid = MMR_resid
)
MMR_comparison <- ggplot(data = MMR_validation, aes(MMR.y, MMR.x, colour = as.factor(Temp_class.x))) +
geom_point() +
geom_smooth(method = "lm", se = F) +
labs(x=expression(Maximum~Metabolic~Rate~(mg~O[2]~h^-1)), y=expression(Active~Metabolic~Rate~(mg~O[2]~h^-1))) +
theme_classic()+
scale_color_manual(values = c("#78B7C5", "#F21A00")) +
labs(colour=expression("Temperature ("*degree*C*")"))
MMR_comparison
MMR_comparison <- ggplot(data = MMR_validation, aes(MMR, AMR, colour = as.factor(Temp_class))) +
geom_point() +
geom_smooth(method = "lm", se = F) +
labs(x=expression(Maximum~Metabolic~Rate~(mg~O[2]~h^-1)), y=expression(Active~Metabolic~Rate~(mg~O[2]~h^-1))) +
theme_classic()+
scale_color_manual(values = c("#78B7C5", "#F21A00")) +
labs(colour=expression("Temperature ("*degree*C*")"))
MMR_comparison
MMR_comparison <- ggplot(data = MMR_validation, aes(AMR, MMR, colour = as.factor(Temp_class))) +
geom_point() +
geom_smooth(method = "lm", se = F) +
labs(y=expression(Maximum~Metabolic~Rate~(mg~O[2]~h^-1)), x=expression(Active~Metabolic~Rate~(mg~O[2]~h^-1))) +
theme_classic()+
scale_color_manual(values = c("#78B7C5", "#F21A00")) +
labs(colour=expression("Temperature ("*degree*C*")"))
MMR_comparison
mmr_comparison_23 <- lm(MMR ~ AMR, data = MMR_validation[which(MMR_validation$Temp_class == "23"),])
mmr_comparison_18 <- lm(MMR ~ AMR, data = MMR_validation[which(MMR_validation$Temp_class == "18"),])
summary(mmr_comparison_18)
summary(mmr_comparison_23)
hist(mmr_comparison_18)
hist(mmr_comparison_18$residuals)
hist(mmr_comparison_23$residuals)
mmr_comparison_mod <- lm(MMR ~ AMR, data = MMR_validation)
hist(mmr_comparison_mod$residuals)
summary(mmr_comparison_mod)
mmr_comparison_mod.compare <- lstrends(mmr_comparison_mod, ~ Temp_class, var = "mass")
library(lsmeans)
library(emmeans)
library(lme4)
library(multcomp)
library(multcompView)
mmr_comparison_mod.compare <- lstrends(mmr_comparison_mod, ~ Temp_class, var = "mass")
mmr_comparison_mod.compare <- lstrends(mmr_comparison_mod, ~ Temp_class, var = "AMR")
mmr_comparison_mod <- lm(MMR ~ AMR, data = MMR_validation)
summary(mmr_comparison_mod)
mmr_comparison_mod.compare <- lstrends(mmr_comparison_mod, ~ Temp_class, var = "AMR")
mmr_comparison_mod <- lm(MMR ~ AMR*Temp_class, data = MMR_validation)
summary(mmr_comparison_mod)
mmr_comparison_mod.compare <- lstrends(mmr_comparison_mod, ~ Temp_class, var = "AMR")
mmr_comparison_mod.slope <- cld(mmr_comparison_mod.compare)
mmr_comparison_mod.slope
#now compare intercepts
mmr_comparison_mod.int.compare <- emmeans(mmr_comparison_mod, ~Temp_class, at = list(mass = 0))
mmr_comparison_mod.int <- cld(mmr_comparison_mod.int.compare)
mmr_comparison_mod.int
mmr_comparison_mod.compare
mmr_comparison_mod.compare <- lstrends(mmr_comparison_mod, ~ Temp_class, var = "AMR")
mmr_comparison_mod.compare
mmr_comparison_mod.slope
summary(mmr_comparison_mod)
summary(mmr_comparison_18)
summary(mmr_comparison_23)
MMR_comparison
summary(mmr_comparison_mod)
mmr_comparison_mod.compare <- lstrends(mmr_comparison_mod, ~ Temp_class, var = "AMR")
mmr_comparison_mod.slope <- cld(mmr_comparison_mod.compare)
mmr_comparison_mod.slope
mmr_comparison_mod.compare
summary(mmr_comparison_mod)
mmr_comparison_mod
ggplot(data = MMR_validation) +
geom_point(aes(x = mass.x, y = MMR.y, color = factor(Temp_class.x)), shape = 4) +
geom_point(aes(x = mass.x, y = MMR.x, color = factor(Temp_class.x))) +
# geom_segment(aes(x = mass.x, xend = mass.x, y = MMR.y, yend = MMR.x, color = factor(Temp_class.x), group = ID_fish)) +
theme_classic() +
scale_color_manual(values = c("#78B7C5", "#F21A00")) +
labs(colour = expression("Temperature ("*degree*C*")"), y = expression(Metabolic~Rate~(mg~O[2]~h^-1)), x = "mass (g)")
ggplot(data = MMR_validation) +
geom_point(aes(x = mass, y = MMR, color = factor(Temp_class)), shape = 4) +
geom_point(aes(x = mass, y = AMR, color = factor(Temp_class))) +
# geom_segment(aes(x = mass.x, xend = mass.x, y = MMR.y, yend = MMR.x, color = factor(Temp_class.x), group = ID_fish)) +
theme_classic() +
scale_color_manual(values = c("#78B7C5", "#F21A00")) +
labs(colour = expression("Temperature ("*degree*C*")"), y = expression(Metabolic~Rate~(mg~O[2]~h^-1)), x = "mass (g)")
MMR_validation <- left_join(tb_MRcalcs[which(tb_MRcalcs$Month == "September"),], tb_realMMRall %>% select(ID_fish, MMR), by = "ID_fish") %>%   #table which combines both MMR measurements for September
mutate(
MaxMR_diff = MMR.y - MMR.x,
MaxMR_ratio = MMR.y/MMR.x,
log_mass = log10(mass)
) %>%
rename(
AMR = MMR.x,
MMR = MMR.y,
AMR_mass = MMR_mass,
AMR_resid = MMR_resid
)
MMR_validation <- left_join(tb_MRcalcs[which(tb_MRcalcs$Month == "September"),], tb_realMMRall %>% select(ID_fish, MMR), by = "ID_fish") %>%   #table which combines both MMR measurements for September
mutate(
MaxMR_diff = MMR.y - MMR.x,
MaxMR_ratio = MMR.y/MMR.x,
log_mass = log10(mass)
) %>%
rename(
AMR = MMR.x,
MMR = MMR.y,
AMR_mass = MMR_mass,
AMR_resid = MMR_resid
)
